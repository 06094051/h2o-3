id~feature~feature_params~data_set_ids~validation_method~validation_data_set_id~description
1~cos~~x=1~R~~cos feature test case.
2~cos~~x=2~R~~cos feature test case.
3~acos~~x=3~R~~acos feature test case.
4~acos~~x=4~R~~acos feature test case.
5~acosh~~x=5~R~~acosh feature test case.
6~acosh~~x=6~R~~acosh feature test case.
7~cosh~~x=7~R~~cosh feature test case.
8~cosh~~x=8~R~~cosh feature test case.
9~sin~~x=9~R~~sin feature test case.
10~sin~~x=10~R~~sin feature test case.
11~sinh~~x=11~R~~sinh feature test case.
12~sinh~~x=12~R~~sinh feature test case.
13~asin~~x=13~R~~asin feature test case.
14~asin~~x=14~R~~asin feature test case.
15~asinh~~x=15~R~~asinh feature test case.
16~asinh~~x=16~R~~asinh feature test case.
17~tan~~x=17~R~~tan feature test case.
18~tan~~x=18~R~~tan feature test case.
19~tanh~~x=19~R~~tanh feature test case.
20~tanh~~x=20~R~~tanh feature test case.
21~atan~~x=21~R~~atan feature test case.
22~atan~~x=22~R~~atan feature test case.
23~atanh~~x=23~R~~atanh feature test case.
24~atanh~~x=24~R~~atanh feature test case.
25~gamma~~x=25~R~~gamma feature test case.
26~gamma~~x=26~R~~gamma feature test case.
27~digamma~~x=27~R~~digamma feature test case.
28~digamma~~x=28~R~~digamma feature test case.
29~trigamma~~x=29~R~~trigamma feature test case.
30~trigamma~~x=30~R~~trigamma feature test case.
31~abs~~x=31~R~~abs feature test case.
32~abs~~x=32~R~~abs feature test case.
33~ceiling~~x=33~R~~ceiling feature test case.
34~ceiling~~x=34~R~~ceiling feature test case.
35~floor~~x=35~R~~floor feature test case.
36~floor~~x=36~R~~floor feature test case.
37~exp~~x=37~R~~exp feature test case.
38~exp~~x=38~R~~exp feature test case.
39~expm1~~x=39~R~~expm1 feature test case.
40~expm1~~x=40~R~~expm1 feature test case.
41~trunc~~x=41~R~~trunc feature test case.
42~trunc~~x=42~R~~trunc feature test case.
43~is.character~~x=43~R~~is.character feature test case.
44~is.character~~x=44~R~~is.character feature test case.
45~is.character~~x=45~R~~is.character feature test case.
46~is.character~~x=46~R~~is.character feature test case.
47~is.na~~x=47~R~~is.na feature test case.
48~is.na~~x=48~R~~is.na feature test case.
49~is.na~~x=49~R~~is.na feature test case.
50~is.na~~x=50~R~~is.na feature test case.
51~is.numeric~~x=51~R~~is.numeric feature test case.
52~is.numeric~~x=52~R~~is.numeric feature test case.
53~is.numeric~~x=53~R~~is.numeric feature test case.
54~is.numeric~~x=54~R~~is.numeric feature test case.
55~log10~~x=55~R~~log10 feature test case.
56~log10~~x=56~R~~log10 feature test case.
57~log1p~~x=57~R~~log1p feature test case.
58~log1p~~x=58~R~~log1p feature test case.
59~log2~~x=59~R~~log2 feature test case.
60~log2~~x=60~R~~log2 feature test case.
61~log~~x=61~R~~log feature test case.
62~log~~x=62~R~~log feature test case.
63~lgamma~~x=63~R~~lgamma feature test case.
64~lgamma~~x=64~R~~lgamma feature test case.
65~h2o.levels~~x=65~R~~h2o.levels feature test case.
66~h2o.levels~~x=66~R~~h2o.levels feature test case.
67~h2o.nlevels~~x=67~R~~h2o.nlevels feature test case.
68~h2o.nlevels~~x=68~R~~h2o.nlevels feature test case.
69~ncol~~x=69~R~~ncol feature test case.
70~ncol~~x=70~R~~ncol feature test case.
71~ncol~~x=71~R~~ncol feature test case.
72~ncol~~x=72~R~~ncol feature test case.
73~ncol~~x=73~R~~ncol feature test case.
74~ncol~~x=74~R~~ncol feature test case.
75~nrow~~x=75~R~~nrow feature test case.
76~nrow~~x=76~R~~nrow feature test case.
77~nrow~~x=77~R~~nrow feature test case.
78~nrow~~x=78~R~~nrow feature test case.
79~nrow~~x=79~R~~nrow feature test case.
80~nrow~~x=80~R~~nrow feature test case.
81~!~~x=81~R~~! feature test case.
82~!~~x=82~R~~! feature test case.
83~sign~~x=83~R~~sign feature test case.
84~sign~~x=84~R~~sign feature test case.
85~sqrt~~x=85~R~~sqrt feature test case.
86~sqrt~~x=86~R~~sqrt feature test case.
87~round~digits=0~x=87~R~~round feature test case.
88~round~digits=1~x=87~R~~round feature test case.
89~round~digits=2~x=87~R~~round feature test case.
90~round~digits=3~x=87~R~~round feature test case.
91~round~digits=4~x=87~R~~round feature test case.
92~round~digits=5~x=87~R~~round feature test case.
93~round~digits=6~x=87~R~~round feature test case.
94~round~digits=0~x=88~R~~round feature test case.
95~round~digits=1~x=88~R~~round feature test case.
96~round~digits=2~x=88~R~~round feature test case.
97~round~digits=3~x=88~R~~round feature test case.
98~round~digits=4~x=88~R~~round feature test case.
99~round~digits=5~x=88~R~~round feature test case.
100~round~digits=6~x=88~R~~round feature test case.
101~signif~digits=0~x=89~R~~signif feature test case.
102~signif~digits=1~x=89~R~~signif feature test case.
103~signif~digits=2~x=89~R~~signif feature test case.
104~signif~digits=3~x=89~R~~signif feature test case.
105~signif~digits=4~x=89~R~~signif feature test case.
106~signif~digits=5~x=89~R~~signif feature test case.
107~signif~digits=6~x=89~R~~signif feature test case.
108~signif~digits=0~x=90~R~~signif feature test case.
109~signif~digits=1~x=90~R~~signif feature test case.
110~signif~digits=2~x=90~R~~signif feature test case.
111~signif~digits=3~x=90~R~~signif feature test case.
112~signif~digits=4~x=90~R~~signif feature test case.
113~signif~digits=5~x=90~R~~signif feature test case.
114~signif~digits=6~x=90~R~~signif feature test case.
115~&~~y=93;x=91~R~~& feature test case.
116~&~~y=94;x=91~R~~& feature test case.
117~&~~y=93;x=92~R~~& feature test case.
118~&~~y=94;x=92~R~~& feature test case.
119~|~~y=97;x=95~R~~| feature test case.
120~|~~y=98;x=95~R~~| feature test case.
121~|~~y=97;x=96~R~~| feature test case.
122~|~~y=98;x=96~R~~| feature test case.
123~/~~y=101;x=99~R~~/ feature test case.
124~/~~y=102;x=99~R~~/ feature test case.
125~/~~y=101;x=100~R~~/ feature test case.
126~/~~y=102;x=100~R~~/ feature test case.
127~%%~~y=105;x=103~R~~%% feature test case.
128~%%~~y=106;x=103~R~~%% feature test case.
129~%%~~y=105;x=104~R~~%% feature test case.
130~%%~~y=106;x=104~R~~%% feature test case.
131~*~~y=109;x=107~R~~* feature test case.
132~*~~y=110;x=107~R~~* feature test case.
133~*~~y=109;x=108~R~~* feature test case.
134~*~~y=110;x=108~R~~* feature test case.
135~-~~y=113;x=111~R~~- feature test case.
136~-~~y=114;x=111~R~~- feature test case.
137~-~~y=113;x=112~R~~- feature test case.
138~-~~y=114;x=112~R~~- feature test case.
139~%/%~~y=117;x=115~R~~%/% feature test case.
140~%/%~~y=118;x=115~R~~%/% feature test case.
141~%/%~~y=117;x=116~R~~%/% feature test case.
142~%/%~~y=118;x=116~R~~%/% feature test case.
143~scale~scale=TRUE;center=TRUE~x=119~R~~scale feature test case.
144~scale~scale=FALSE;center=TRUE~x=119~R~~scale feature test case.
145~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=TRUE~x=119~R~~scale feature test case.
146~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=TRUE~x=119~R~~scale feature test case.
147~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=TRUE~x=119~R~~scale feature test case.
148~scale~scale=TRUE;center=FALSE~x=119~R~~scale feature test case.
149~scale~scale=FALSE;center=FALSE~x=119~R~~scale feature test case.
150~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=FALSE~x=119~R~~scale feature test case.
151~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=FALSE~x=119~R~~scale feature test case.
152~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=FALSE~x=119~R~~scale feature test case.
153~scale~scale=TRUE;center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=119~R~~scale feature test case.
154~scale~scale=FALSE;center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=119~R~~scale feature test case.
155~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=119~R~~scale feature test case.
156~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=119~R~~scale feature test case.
157~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=119~R~~scale feature test case.
158~scale~scale=TRUE;center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=119~R~~scale feature test case.
159~scale~scale=FALSE;center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=119~R~~scale feature test case.
160~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=119~R~~scale feature test case.
161~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=119~R~~scale feature test case.
162~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=119~R~~scale feature test case.
163~scale~scale=TRUE;center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=119~R~~scale feature test case.
164~scale~scale=FALSE;center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=119~R~~scale feature test case.
165~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=119~R~~scale feature test case.
166~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=119~R~~scale feature test case.
167~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=119~R~~scale feature test case.
168~scale~scale=TRUE;center=TRUE~x=120~R~~scale feature test case.
169~scale~scale=FALSE;center=TRUE~x=120~R~~scale feature test case.
170~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=TRUE~x=120~R~~scale feature test case.
171~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=TRUE~x=120~R~~scale feature test case.
172~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=TRUE~x=120~R~~scale feature test case.
173~scale~scale=TRUE;center=FALSE~x=120~R~~scale feature test case.
174~scale~scale=FALSE;center=FALSE~x=120~R~~scale feature test case.
175~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=FALSE~x=120~R~~scale feature test case.
176~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=FALSE~x=120~R~~scale feature test case.
177~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=FALSE~x=120~R~~scale feature test case.
178~scale~scale=TRUE;center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=120~R~~scale feature test case.
179~scale~scale=FALSE;center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=120~R~~scale feature test case.
180~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=120~R~~scale feature test case.
181~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=120~R~~scale feature test case.
182~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=c(-9606.81380491,-6680.16258935,-4607.09159321,-3979.25938175,3214.84613349,8582.89664728,8085.22168842,5512.04589708,3192.67898298,695.895942338)~x=120~R~~scale feature test case.
183~scale~scale=TRUE;center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=120~R~~scale feature test case.
184~scale~scale=FALSE;center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=120~R~~scale feature test case.
185~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=120~R~~scale feature test case.
186~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=120~R~~scale feature test case.
187~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=c(7281.33201658,4241.27794985,9772.64447005,-6848.49452085,6292.97335982,-5664.74993383,-8623.44346323,7551.5033785,299.038108528,1591.47940903)~x=120~R~~scale feature test case.
188~scale~scale=TRUE;center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=120~R~~scale feature test case.
189~scale~scale=FALSE;center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=120~R~~scale feature test case.
190~scale~scale=c(8975.16791599,6600.23153691,-4743.70837238,-1621.75430033,1407.10219865,6584.27388217,9805.2475525,376.950389608,-2388.63462976,-6245.23128543);center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=120~R~~scale feature test case.
191~scale~scale=c(543.797455393,-3797.68825188,9320.11445171,5919.40306601,1106.822938,1995.71919838,-1152.82844535,-4231.25160346,6589.75302218,-8111.62120187);center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=120~R~~scale feature test case.
192~scale~scale=c(9701.51926813,3424.67370451,-7501.14272171,-8196.06140255,3138.12812209,-9247.09034799,8738.2405689,6365.08425714,5315.14023422,-6026.38086866);center=c(5441.47949021,3111.3081374,-7564.55235606,6466.03929789,6573.54472763,-255.13019172,5714.59038325,5411.42590139,-9600.47158575,-7600.21127131)~x=120~R~~scale feature test case.
193~^~~y=123;x=121~R~~^ feature test case.
194~^~~y=124;x=121~R~~^ feature test case.
195~^~~y=123;x=122~R~~^ feature test case.
196~^~~y=124;x=122~R~~^ feature test case.
197~+~~y=127;x=125~R~~+ feature test case.
198~+~~y=128;x=125~R~~+ feature test case.
199~+~~y=127;x=126~R~~+ feature test case.
200~+~~y=128;x=126~R~~+ feature test case.
201~>=~~y=131;x=129~R~~>= feature test case.
202~>=~~y=132;x=129~R~~>= feature test case.
203~>=~~y=131;x=130~R~~>= feature test case.
204~>=~~y=132;x=130~R~~>= feature test case.
205~>~~y=135;x=133~R~~> feature test case.
206~>~~y=136;x=133~R~~> feature test case.
207~>~~y=135;x=134~R~~> feature test case.
208~>~~y=136;x=134~R~~> feature test case.
209~<=~~y=139;x=137~R~~<= feature test case.
210~<=~~y=140;x=137~R~~<= feature test case.
211~<=~~y=139;x=138~R~~<= feature test case.
212~<=~~y=140;x=138~R~~<= feature test case.
213~<~~y=143;x=141~R~~< feature test case.
214~<~~y=144;x=141~R~~< feature test case.
215~<~~y=143;x=142~R~~< feature test case.
216~<~~y=144;x=142~R~~< feature test case.
217~==~~y=147;x=145~R~~== feature test case.
218~==~~y=148;x=145~R~~== feature test case.
219~==~~y=147;x=146~R~~== feature test case.
220~==~~y=148;x=146~R~~== feature test case.
221~!=~~y=151;x=149~R~~!= feature test case.
222~!=~~y=152;x=149~R~~!= feature test case.
223~!=~~y=151;x=150~R~~!= feature test case.
224~!=~~y=152;x=150~R~~!= feature test case.
225~all~~x=153~R~~all feature test case.
226~all~~x=154~R~~all feature test case.
227~all~~x=155~R~~all feature test case.
228~all~~x=156~R~~all feature test case.
229~all~~x=157~R~~all feature test case.
230~all~~x=158~R~~all feature test case.
231~h2o.cbind~~y=161;x=159;z=163~R~~h2o.cbind feature test case.
232~h2o.cbind~~y=161;x=159;z=164~R~~h2o.cbind feature test case.
233~h2o.cbind~~y=162;x=159;z=163~R~~h2o.cbind feature test case.
234~h2o.cbind~~y=162;x=159;z=164~R~~h2o.cbind feature test case.
235~h2o.cbind~~y=161;x=160;z=163~R~~h2o.cbind feature test case.
236~h2o.cbind~~y=161;x=160;z=164~R~~h2o.cbind feature test case.
237~h2o.cbind~~y=162;x=160;z=163~R~~h2o.cbind feature test case.
238~h2o.cbind~~y=162;x=160;z=164~R~~h2o.cbind feature test case.
239~colnames~prefix='Ic3nQqwri';do.NULL=TRUE~x=165~R~~colnames feature test case.
240~colnames~prefix='COJX';do.NULL=TRUE~x=165~R~~colnames feature test case.
241~colnames~prefix='33nPfwx';do.NULL=TRUE~x=165~R~~colnames feature test case.
242~colnames~prefix='Ic3nQqwri';do.NULL=FALSE~x=165~R~~colnames feature test case.
243~colnames~prefix='COJX';do.NULL=FALSE~x=165~R~~colnames feature test case.
244~colnames~prefix='33nPfwx';do.NULL=FALSE~x=165~R~~colnames feature test case.
245~colnames~prefix='Ic3nQqwri';do.NULL=TRUE~x=166~R~~colnames feature test case.
246~colnames~prefix='COJX';do.NULL=TRUE~x=166~R~~colnames feature test case.
247~colnames~prefix='33nPfwx';do.NULL=TRUE~x=166~R~~colnames feature test case.
248~colnames~prefix='Ic3nQqwri';do.NULL=FALSE~x=166~R~~colnames feature test case.
249~colnames~prefix='COJX';do.NULL=FALSE~x=166~R~~colnames feature test case.
250~colnames~prefix='33nPfwx';do.NULL=FALSE~x=166~R~~colnames feature test case.
251~[~col=1;row=2~data=167~R~~[ feature test case.
252~[~col=6;row=2~data=167~R~~[ feature test case.
253~[~col=8;row=2~data=167~R~~[ feature test case.
254~[~col=c(4);row=2~data=167~R~~[ feature test case.
255~[~col=c(2,2,3,4,4,5,5,6,7);row=2~data=167~R~~[ feature test case.
256~[~col=c(2,2,3,5,6,8,9);row=2~data=167~R~~[ feature test case.
257~[~col=1;row=1~data=167~R~~[ feature test case.
258~[~col=6;row=1~data=167~R~~[ feature test case.
259~[~col=8;row=1~data=167~R~~[ feature test case.
260~[~col=c(4);row=1~data=167~R~~[ feature test case.
261~[~col=c(2,2,3,4,4,5,5,6,7);row=1~data=167~R~~[ feature test case.
262~[~col=c(2,2,3,5,6,8,9);row=1~data=167~R~~[ feature test case.
263~[~col=1;row=8~data=167~R~~[ feature test case.
264~[~col=6;row=8~data=167~R~~[ feature test case.
265~[~col=8;row=8~data=167~R~~[ feature test case.
266~[~col=c(4);row=8~data=167~R~~[ feature test case.
267~[~col=c(2,2,3,4,4,5,5,6,7);row=8~data=167~R~~[ feature test case.
268~[~col=c(2,2,3,5,6,8,9);row=8~data=167~R~~[ feature test case.
269~[~col=1;row=c(1,4,5,7,8)~data=167~R~~[ feature test case.
270~[~col=6;row=c(1,4,5,7,8)~data=167~R~~[ feature test case.
271~[~col=8;row=c(1,4,5,7,8)~data=167~R~~[ feature test case.
272~[~col=c(4);row=c(1,4,5,7,8)~data=167~R~~[ feature test case.
273~[~col=c(2,2,3,4,4,5,5,6,7);row=c(1,4,5,7,8)~data=167~R~~[ feature test case.
274~[~col=c(2,2,3,5,6,8,9);row=c(1,4,5,7,8)~data=167~R~~[ feature test case.
275~[~col=1;row=c(1,2,3,4,4,6)~data=167~R~~[ feature test case.
276~[~col=6;row=c(1,2,3,4,4,6)~data=167~R~~[ feature test case.
277~[~col=8;row=c(1,2,3,4,4,6)~data=167~R~~[ feature test case.
278~[~col=c(4);row=c(1,2,3,4,4,6)~data=167~R~~[ feature test case.
279~[~col=c(2,2,3,4,4,5,5,6,7);row=c(1,2,3,4,4,6)~data=167~R~~[ feature test case.
280~[~col=c(2,2,3,5,6,8,9);row=c(1,2,3,4,4,6)~data=167~R~~[ feature test case.
281~[~col=1;row=c(5,5,6)~data=167~R~~[ feature test case.
282~[~col=6;row=c(5,5,6)~data=167~R~~[ feature test case.
283~[~col=8;row=c(5,5,6)~data=167~R~~[ feature test case.
284~[~col=c(4);row=c(5,5,6)~data=167~R~~[ feature test case.
285~[~col=c(2,2,3,4,4,5,5,6,7);row=c(5,5,6)~data=167~R~~[ feature test case.
286~[~col=c(2,2,3,5,6,8,9);row=c(5,5,6)~data=167~R~~[ feature test case.
287~[~col=1;row=2~data=168~R~~[ feature test case.
288~[~col=6;row=2~data=168~R~~[ feature test case.
289~[~col=8;row=2~data=168~R~~[ feature test case.
290~[~col=c(4);row=2~data=168~R~~[ feature test case.
291~[~col=c(2,2,3,4,4,5,5,6,7);row=2~data=168~R~~[ feature test case.
292~[~col=c(2,2,3,5,6,8,9);row=2~data=168~R~~[ feature test case.
293~[~col=1;row=1~data=168~R~~[ feature test case.
294~[~col=6;row=1~data=168~R~~[ feature test case.
295~[~col=8;row=1~data=168~R~~[ feature test case.
296~[~col=c(4);row=1~data=168~R~~[ feature test case.
297~[~col=c(2,2,3,4,4,5,5,6,7);row=1~data=168~R~~[ feature test case.
298~[~col=c(2,2,3,5,6,8,9);row=1~data=168~R~~[ feature test case.
299~[~col=1;row=8~data=168~R~~[ feature test case.
300~[~col=6;row=8~data=168~R~~[ feature test case.
301~[~col=8;row=8~data=168~R~~[ feature test case.
302~[~col=c(4);row=8~data=168~R~~[ feature test case.
303~[~col=c(2,2,3,4,4,5,5,6,7);row=8~data=168~R~~[ feature test case.
304~[~col=c(2,2,3,5,6,8,9);row=8~data=168~R~~[ feature test case.
305~[~col=1;row=c(1,4,5,7,8)~data=168~R~~[ feature test case.
306~[~col=6;row=c(1,4,5,7,8)~data=168~R~~[ feature test case.
307~[~col=8;row=c(1,4,5,7,8)~data=168~R~~[ feature test case.
308~[~col=c(4);row=c(1,4,5,7,8)~data=168~R~~[ feature test case.
309~[~col=c(2,2,3,4,4,5,5,6,7);row=c(1,4,5,7,8)~data=168~R~~[ feature test case.
310~[~col=c(2,2,3,5,6,8,9);row=c(1,4,5,7,8)~data=168~R~~[ feature test case.
311~[~col=1;row=c(1,2,3,4,4,6)~data=168~R~~[ feature test case.
312~[~col=6;row=c(1,2,3,4,4,6)~data=168~R~~[ feature test case.
313~[~col=8;row=c(1,2,3,4,4,6)~data=168~R~~[ feature test case.
314~[~col=c(4);row=c(1,2,3,4,4,6)~data=168~R~~[ feature test case.
315~[~col=c(2,2,3,4,4,5,5,6,7);row=c(1,2,3,4,4,6)~data=168~R~~[ feature test case.
316~[~col=c(2,2,3,5,6,8,9);row=c(1,2,3,4,4,6)~data=168~R~~[ feature test case.
317~[~col=1;row=c(5,5,6)~data=168~R~~[ feature test case.
318~[~col=6;row=c(5,5,6)~data=168~R~~[ feature test case.
319~[~col=8;row=c(5,5,6)~data=168~R~~[ feature test case.
320~[~col=c(4);row=c(5,5,6)~data=168~R~~[ feature test case.
321~[~col=c(2,2,3,4,4,5,5,6,7);row=c(5,5,6)~data=168~R~~[ feature test case.
322~[~col=c(2,2,3,5,6,8,9);row=c(5,5,6)~data=168~R~~[ feature test case.
323~h2o.table~~y=171;x=169~R~~h2o.table feature test case.
324~h2o.table~~y=172;x=169~R~~h2o.table feature test case.
325~h2o.table~~y=171;x=170~R~~h2o.table feature test case.
326~h2o.table~~y=172;x=170~R~~h2o.table feature test case.
327~h2o.table~~x=173~R~~h2o.table feature test case.
328~h2o.table~~x=174~R~~h2o.table feature test case.
329~h2o.quantile~probs=c(0.430504052856,0.922715033843,0.664902088896,0.526115140017,0.687889683105,0.388167563504,0.889252589262,0.830775586333,0.859105959314,0.508130354057)~x=175~R~~h2o.quantile feature test case.
330~h2o.quantile~probs=c(0.709594096373,0.190329260518,0.457682536608,0.984629459708,0.101614449699,0.981724903423,0.676831274513,0.057490173912,0.0623274783665,0.350044512504)~x=175~R~~h2o.quantile feature test case.
331~h2o.quantile~probs=c(0.536297236295,0.343770410299,0.480221877597,0.878511467473,0.366517980224,0.989607922356,0.889056436835,0.624547470454,0.206571837992,0.0944858478667)~x=175~R~~h2o.quantile feature test case.
332~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=4;include.lowest=TRUE~x=176~R~~cut feature test case.
333~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=8;include.lowest=TRUE~x=176~R~~cut feature test case.
334~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=5;include.lowest=TRUE~x=176~R~~cut feature test case.
335~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=4;include.lowest=TRUE~x=176~R~~cut feature test case.
336~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=8;include.lowest=TRUE~x=176~R~~cut feature test case.
337~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=5;include.lowest=TRUE~x=176~R~~cut feature test case.
338~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=4;include.lowest=FALSE~x=176~R~~cut feature test case.
339~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=8;include.lowest=FALSE~x=176~R~~cut feature test case.
340~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=5;include.lowest=FALSE~x=176~R~~cut feature test case.
341~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=4;include.lowest=FALSE~x=176~R~~cut feature test case.
342~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=8;include.lowest=FALSE~x=176~R~~cut feature test case.
343~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=5;include.lowest=FALSE~x=176~R~~cut feature test case.
344~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=4;include.lowest=TRUE~x=176~R~~cut feature test case.
345~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=8;include.lowest=TRUE~x=176~R~~cut feature test case.
346~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=5;include.lowest=TRUE~x=176~R~~cut feature test case.
347~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=4;include.lowest=TRUE~x=176~R~~cut feature test case.
348~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=8;include.lowest=TRUE~x=176~R~~cut feature test case.
349~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=5;include.lowest=TRUE~x=176~R~~cut feature test case.
350~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=4;include.lowest=FALSE~x=176~R~~cut feature test case.
351~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=8;include.lowest=FALSE~x=176~R~~cut feature test case.
352~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=5;include.lowest=FALSE~x=176~R~~cut feature test case.
353~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=4;include.lowest=FALSE~x=176~R~~cut feature test case.
354~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=8;include.lowest=FALSE~x=176~R~~cut feature test case.
355~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=5;include.lowest=FALSE~x=176~R~~cut feature test case.
356~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=4;include.lowest=TRUE~x=176~R~~cut feature test case.
357~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=8;include.lowest=TRUE~x=176~R~~cut feature test case.
358~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=5;include.lowest=TRUE~x=176~R~~cut feature test case.
359~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=4;include.lowest=TRUE~x=176~R~~cut feature test case.
360~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=8;include.lowest=TRUE~x=176~R~~cut feature test case.
361~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=5;include.lowest=TRUE~x=176~R~~cut feature test case.
362~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=4;include.lowest=FALSE~x=176~R~~cut feature test case.
363~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=8;include.lowest=FALSE~x=176~R~~cut feature test case.
364~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=5;include.lowest=FALSE~x=176~R~~cut feature test case.
365~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=4;include.lowest=FALSE~x=176~R~~cut feature test case.
366~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=8;include.lowest=FALSE~x=176~R~~cut feature test case.
367~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=5;include.lowest=FALSE~x=176~R~~cut feature test case.
368~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=4;include.lowest=TRUE~x=177~R~~cut feature test case.
369~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=8;include.lowest=TRUE~x=177~R~~cut feature test case.
370~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=5;include.lowest=TRUE~x=177~R~~cut feature test case.
371~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=4;include.lowest=TRUE~x=177~R~~cut feature test case.
372~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=8;include.lowest=TRUE~x=177~R~~cut feature test case.
373~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=5;include.lowest=TRUE~x=177~R~~cut feature test case.
374~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=4;include.lowest=FALSE~x=177~R~~cut feature test case.
375~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=8;include.lowest=FALSE~x=177~R~~cut feature test case.
376~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=TRUE;dig.lab=5;include.lowest=FALSE~x=177~R~~cut feature test case.
377~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=4;include.lowest=FALSE~x=177~R~~cut feature test case.
378~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=8;include.lowest=FALSE~x=177~R~~cut feature test case.
379~cut~breaks=c(0.871886528141,0.139403002969,0.648904211466);right=FALSE;dig.lab=5;include.lowest=FALSE~x=177~R~~cut feature test case.
380~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=4;include.lowest=TRUE~x=177~R~~cut feature test case.
381~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=8;include.lowest=TRUE~x=177~R~~cut feature test case.
382~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=5;include.lowest=TRUE~x=177~R~~cut feature test case.
383~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=4;include.lowest=TRUE~x=177~R~~cut feature test case.
384~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=8;include.lowest=TRUE~x=177~R~~cut feature test case.
385~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=5;include.lowest=TRUE~x=177~R~~cut feature test case.
386~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=4;include.lowest=FALSE~x=177~R~~cut feature test case.
387~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=8;include.lowest=FALSE~x=177~R~~cut feature test case.
388~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=TRUE;dig.lab=5;include.lowest=FALSE~x=177~R~~cut feature test case.
389~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=4;include.lowest=FALSE~x=177~R~~cut feature test case.
390~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=8;include.lowest=FALSE~x=177~R~~cut feature test case.
391~cut~breaks=c(0.588549505886,0.0460723710613,0.98064127588);right=FALSE;dig.lab=5;include.lowest=FALSE~x=177~R~~cut feature test case.
392~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=4;include.lowest=TRUE~x=177~R~~cut feature test case.
393~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=8;include.lowest=TRUE~x=177~R~~cut feature test case.
394~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=5;include.lowest=TRUE~x=177~R~~cut feature test case.
395~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=4;include.lowest=TRUE~x=177~R~~cut feature test case.
396~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=8;include.lowest=TRUE~x=177~R~~cut feature test case.
397~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=5;include.lowest=TRUE~x=177~R~~cut feature test case.
398~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=4;include.lowest=FALSE~x=177~R~~cut feature test case.
399~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=8;include.lowest=FALSE~x=177~R~~cut feature test case.
400~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=TRUE;dig.lab=5;include.lowest=FALSE~x=177~R~~cut feature test case.
401~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=4;include.lowest=FALSE~x=177~R~~cut feature test case.
402~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=8;include.lowest=FALSE~x=177~R~~cut feature test case.
403~cut~breaks=c(0.773187707198,0.835609492954,0.0926619910061);right=FALSE;dig.lab=5;include.lowest=FALSE~x=177~R~~cut feature test case.
404~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
405~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
406~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
407~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
408~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
409~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
410~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
411~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
412~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
413~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
414~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
415~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
416~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
417~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
418~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
419~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
420~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
421~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
422~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
423~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
424~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
425~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
426~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
427~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
428~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
429~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
430~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=178~R~~h2o.match feature test case.
431~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
432~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
433~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
434~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
435~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
436~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
437~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
438~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
439~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
440~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
441~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
442~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
443~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
444~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
445~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
446~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
447~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
448~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
449~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
450~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
451~h2o.match~nomatch=-5532;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
452~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
453~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
454~h2o.match~nomatch=-4018;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
455~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
456~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
457~h2o.match~nomatch=6318;incomparables=c('b');table=c('c')~x=179~R~~h2o.match feature test case.
458~h2o.which~~x=180~R~~h2o.which feature test case.
459~h2o.which~~x=181~R~~h2o.which feature test case.
460~h2o.rep_len~length.out=1~x=182~R~~h2o.rep_len feature test case.
461~h2o.rep_len~length.out=10~x=182~R~~h2o.rep_len feature test case.
462~h2o.rep_len~length.out=15~x=182~R~~h2o.rep_len feature test case.
463~h2o.rep_len~length.out=42~x=182~R~~h2o.rep_len feature test case.
464~h2o.rep_len~length.out=1~x=183~R~~h2o.rep_len feature test case.
465~h2o.rep_len~length.out=10~x=183~R~~h2o.rep_len feature test case.
466~h2o.rep_len~length.out=15~x=183~R~~h2o.rep_len feature test case.
467~h2o.rep_len~length.out=42~x=183~R~~h2o.rep_len feature test case.
468~h2o.strsplit~split='R'~x=184~R~~h2o.strsplit feature test case.
469~h2o.strsplit~split='g'~x=184~R~~h2o.strsplit feature test case.
470~h2o.strsplit~split='Y'~x=184~R~~h2o.strsplit feature test case.
471~h2o.strsplit~split='R'~x=185~R~~h2o.strsplit feature test case.
472~h2o.strsplit~split='g'~x=185~R~~h2o.strsplit feature test case.
473~h2o.strsplit~split='Y'~x=185~R~~h2o.strsplit feature test case.
474~h2o.toupper~~x=186~R~~h2o.toupper feature test case.
475~h2o.toupper~~x=187~R~~h2o.toupper feature test case.
476~t~~x=188~R~~t feature test case.
477~t~~x=189~R~~t feature test case.
478~%*%~~y=192;x=190~R~~%*% feature test case.
479~%*%~~y=193;x=190~R~~%*% feature test case.
480~%*%~~y=192;x=191~R~~%*% feature test case.
481~%*%~~y=193;x=191~R~~%*% feature test case.
482~h2o.var~use='everything';na.rm=TRUE~y=196;x=194~R~~h2o.var feature test case.
483~h2o.var~use='complete.obs';na.rm=TRUE~y=196;x=194~R~~h2o.var feature test case.
484~h2o.var~use='everything';na.rm=FALSE~y=196;x=194~R~~h2o.var feature test case.
485~h2o.var~use='complete.obs';na.rm=FALSE~y=196;x=194~R~~h2o.var feature test case.
486~h2o.var~use='everything';na.rm=TRUE~y=197;x=194~R~~h2o.var feature test case.
487~h2o.var~use='complete.obs';na.rm=TRUE~y=197;x=194~R~~h2o.var feature test case.
488~h2o.var~use='everything';na.rm=FALSE~y=197;x=194~R~~h2o.var feature test case.
489~h2o.var~use='complete.obs';na.rm=FALSE~y=197;x=194~R~~h2o.var feature test case.
490~h2o.var~y=NULL;use='everything';na.rm=TRUE~x=194~R~~h2o.var feature test case.
491~h2o.var~y=NULL;use='complete.obs';na.rm=TRUE~x=194~R~~h2o.var feature test case.
492~h2o.var~y=NULL;use='everything';na.rm=FALSE~x=194~R~~h2o.var feature test case.
493~h2o.var~y=NULL;use='complete.obs';na.rm=FALSE~x=194~R~~h2o.var feature test case.
494~h2o.var~use='everything';na.rm=TRUE~y=196;x=195~R~~h2o.var feature test case.
495~h2o.var~use='complete.obs';na.rm=TRUE~y=196;x=195~R~~h2o.var feature test case.
496~h2o.var~use='everything';na.rm=FALSE~y=196;x=195~R~~h2o.var feature test case.
497~h2o.var~use='complete.obs';na.rm=FALSE~y=196;x=195~R~~h2o.var feature test case.
498~h2o.var~use='everything';na.rm=TRUE~y=197;x=195~R~~h2o.var feature test case.
499~h2o.var~use='complete.obs';na.rm=TRUE~y=197;x=195~R~~h2o.var feature test case.
500~h2o.var~use='everything';na.rm=FALSE~y=197;x=195~R~~h2o.var feature test case.
501~h2o.var~use='complete.obs';na.rm=FALSE~y=197;x=195~R~~h2o.var feature test case.
502~h2o.var~y=NULL;use='everything';na.rm=TRUE~x=195~R~~h2o.var feature test case.
503~h2o.var~y=NULL;use='complete.obs';na.rm=TRUE~x=195~R~~h2o.var feature test case.
504~h2o.var~y=NULL;use='everything';na.rm=FALSE~x=195~R~~h2o.var feature test case.
505~h2o.var~y=NULL;use='complete.obs';na.rm=FALSE~x=195~R~~h2o.var feature test case.
506~h2o.var~use='all.obs';na.rm=TRUE~y=199;x=198~R~~h2o.var feature test case.
507~h2o.var~use='all.obs';na.rm=FALSE~y=199;x=198~R~~h2o.var feature test case.
508~h2o.var~y=NULL;use='all.obs';na.rm=TRUE~x=198~R~~h2o.var feature test case.
509~h2o.var~y=NULL;use='all.obs';na.rm=FALSE~x=198~R~~h2o.var feature test case.
